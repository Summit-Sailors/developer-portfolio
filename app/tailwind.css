@import "tailwindcss";

@layer base {
  html,
  body,
  #main {
    height: 100%;
    margin: 0;
    font-family: "Inter", sans-serif; /* Apply Inter font */
  }

  main.flex-grow {
    /* Ensure main content area can grow */
    flex: 1 0 auto;
  }

  html {
    @apply scroll-smooth;
  }

  body {
    /*
      CORRECTED GRADIENT IMPLEMENTATION:
      Instead of @apply-ing the gradient classes, we define the
      background-image directly using standard CSS and reference
      our theme colors with Tailwind's `theme()` function.
      The simpler utilities are still applied with @apply.
    */
    background-image: linear-gradient(
      to bottom,
      theme("colors.zinc.900"),
      black
    );
    @apply text-white min-h-screen flex flex-col font-sans;
    display: flex;
    flex-direction: column;
  }

  :root {
    /* Your Color Palette as CSS Variables */
    --color-purple-400: hsl(276, 70%, 70%);
    --color-purple-500: hsl(276, 70%, 60%);
    --color-purple-600: hsl(276, 70%, 50%);
    --color-purple-700: hsl(276, 70%, 40%);

    --color-cyan-400: hsl(196, 70%, 70%);
    --color-cyan-500: hsl(196, 70%, 60%);

    --color-pink-500: hsl(336, 70%, 60%);

    --color-zinc-300: hsl(240, 5%, 80%);
    --color-zinc-400: hsl(240, 5%, 65%);
    --color-zinc-700: hsl(240, 5%, 35%);
    --color-zinc-800: hsl(240, 5%, 25%);
    --color-zinc-900: hsl(240, 5%, 15%);

    --color-orange-500: hsl(30, 90%, 60%);
    --color-yellow-500: hsl(50, 90%, 60%);
    --color-blue-500: hsl(220, 80%, 60%);
    --color-green-500: hsl(145, 60%, 50%);
    --color-red-500: hsl(0, 80%, 60%);

    /* Base font family */
    --font-sans: "Inter", -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto,
      Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji",
      "Segoe UI Symbol";
  }
}

/* Keyframes for animations */
@keyframes blob {
  0% {
    transform: translate(0px, 0px) scale(1);
  }
  33% {
    transform: translate(30px, -50px) scale(1.1);
  }
  66% {
    transform: translate(-20px, 20px) scale(0.9);
  }
  100% {
    transform: translate(0px, 0px) scale(1);
  }
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeInScale {
  from {
    opacity: 0;
    transform: scale(0.8);
  }
  to {
    opacity: 1;
    transform: scale(1);
  }
}

@keyframes slideInLeft {
  from {
    opacity: 0;
    transform: translateX(-30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes slideInRight {
  from {
    opacity: 0;
    transform: translateX(30px);
  }
  to {
    opacity: 1;
    transform: translateX(0);
  }
}

/* Custom utility classes */
@layer utilities {
  .animate-blob {
    animation: blob 7s infinite;
  }
  .animate-fade-in-up {
    animation: fadeInUp 0.5s ease-out forwards;
  }
  .animate-fade-in-scale {
    animation: fadeInScale 0.5s ease-out forwards;
  }
  .animate-slide-in-left {
    animation: slideInLeft 0.5s ease-out forwards;
  }
  .animate-slide-in-right {
    animation: slideInRight 0.5s ease-out forwards;
  }
  .animate-pulse-slow {
    animation: pulse 4s cubic-bezier(0.4, 0, 0.6, 1) infinite;
  }

  /* Animation delay utilities */
  .animation-delay-100 {
    animation-delay: 100ms;
  }
  .animation-delay-200 {
    animation-delay: 200ms;
  }
  .animation-delay-300 {
    animation-delay: 300ms;
  }
  .animation-delay-400 {
    animation-delay: 400ms;
  }
  .animation-delay-500 {
    animation-delay: 500ms;
  }
  .animation-delay-2000 {
    animation-delay: 2s;
  }
  .animation-delay-4000 {
    animation-delay: 4s;
  }
}
